{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["class Row {\n  #columns: string[] = [];\n\n  push(v: string) {\n    this.#columns.push(v);\n\n    return this;\n  }\n\n  pushMany(v: string[]) {\n    this.#columns = [...this.#columns, ...v]\n\n    return this;\n  }\n\n  set(i: number, v: string) {\n    this.#columns[i] = v;\n\n    return this;\n  }\n\n  get(i: number): string {\n    return this.#columns[i];\n  }\n\n  getAll(): string[] {\n    return this.#columns;\n  }\n\n  getLength(): number {\n    return this.#columns.length;\n  }\n}\n\nclass Table {\n  #rows: Row[] = [];\n\n  getRow(i: number): Row {\n    return this.#rows[i] || this.createRow(i);\n  }\n\n  createRow(i: number): Row {\n    if (this.#rows[i]) {\n      return this.#rows[i];\n    }\n\n    this.#rows[i] = new Row();\n\n    return this.#rows[i];\n  }\n\n  pushRow(v: string[]): Row {\n    let row = this.createRow(this.#rows.length);\n\n    row.pushMany(v);\n\n    return row;\n  }\n\n  import(file: string) {\n    this.#rows = this.#fileToData(file);\n  }\n\n  export() {\n    function value(v: string) {\n      if (v.includes('\\n') || v.includes('\"')) {\n        v = v.replace(/\"/g, '\"\"');\n      \n        v = `\"${v}\"`\n      }\n\n      return v;\n    }\n\n    let csv = '';\n\n    for (let row of this.#rows) {\n      let columns = row.getAll()\n      \n      for (let i = 0; i < columns.length; i++) {\n        csv += value(columns[i]);\n\n        if (i === (columns.length - 1)) {\n          csv += '\\n';\n        } else {\n          csv += ',';\n        }\n      }\n    }\n\n    return csv;\n  }\n\n  #fileToData(file: string) {\n    if (!file.endsWith('\\n')) {\n      file = file + '\\n';\n    }\n\n    let inQuotes = false;\n    let currentValue = '';\n    let rowNumber = 0;\n\n    let rows: Row[] = [];\n    let columns: string[] = []\n\n    let skip = false;\n\n    for (let i = 0; i < file.length; i++) {\n      const character = file[i];\n      const nextCharacter = file[i + 1];\n\n      if (skip) {\n        skip = false;\n        continue;\n      }\n\n      if (inQuotes) {\n        if (character === '\"' && nextCharacter === '\"') {\n          skip = true;\n          currentValue += character;\n          continue;\n        }\n        if (character === '\"') {\n          inQuotes = false;\n          continue;\n        }\n\n        currentValue += character;\n      }\n\n      if (!inQuotes) {\n        if (character === '\"') {\n          inQuotes = true;\n        } else if (character === ',') {\n          columns.push(currentValue);\n          currentValue = '';\n        } else if (character === '\\n') {\n          columns.push(currentValue);\n          currentValue = '';\n          rows.push((new Row()).pushMany(columns));\n          rowNumber++;\n          columns = [];\n        } else {\n          currentValue += character;\n        }\n      }\n    }\n\n    return rows;\n  }\n}"],
  "mappings": "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",
  "names": []
}
